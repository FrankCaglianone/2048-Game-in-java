<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
   <duplication lines="14" tokens="130">
      <file column="9" endcolumn="9" endline="46" line="33"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="9" endcolumn="9" endline="71" line="58"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[        for (int row = 0; row < grid.getGrid().length; row++) {
            // use counter in order to move left one by one the tiles
            int counter = 0;
            for (int col = grid.getGrid().length - 1; col >= 0 ; col--) {
                if (grid.getGrid()[row][col] != 0) {
                    grid.getGrid()[row][grid.getGrid().length - 1 - counter] = grid.getGrid()[row][col];
                    // "empty" the original tile position afetr movement
                    if (grid.getGrid().length - 1 - counter != col) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        }]]></codefragment>
   </duplication>
   <duplication lines="14" tokens="130">
      <file column="9" endcolumn="9" endline="189" line="176"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="9" endcolumn="9" endline="215" line="202"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[        for (int col = 0; col < grid.getGrid().length; col++) {
            // use counter in order to move left one by one the tiles
            int counter = 0;
            for (int row = grid.getGrid().length - 1; row >= 0 ; row--) {
                if (grid.getGrid()[row][col] != 0) {
                    grid.getGrid()[grid.getGrid().length - 1 - counter][col] = grid.getGrid()[row][col];
                    // "empty" the original tile position afetr movement
                    if (grid.getGrid().length - 1 - counter != row) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        }]]></codefragment>
   </duplication>
   <duplication lines="20" tokens="116">
      <file column="25" endcolumn="33" endline="93" line="74"
            path="/home/francesco/project-2048-s-game/src/gui/BoardPanel.java"/>
      <file column="25" endcolumn="33" endline="113" line="94"
            path="/home/francesco/project-2048-s-game/src/gui/BoardPanel.java"/>
      <codefragment><![CDATA[                        case KeyEvent.VK_LEFT:
                            if (game.canMoveLeft()) {
                                mt.leftMove();
                                sp.spawn();
                            } else if (game.isGameOver()) {
                                gamestate = State.OVER;
                            } else if (game.youWon()) {
                                gamestate = State.WON;
                            }
                            break;
                        case KeyEvent.VK_RIGHT:
                            if (game.canMoveRight()) {
                                mt.rightMove();
                                sp.spawn();
                            } else if (game.isGameOver()) {
                                gamestate = State.OVER;
                            } else if (game.youWon()) {
                                gamestate = State.WON;
                            }
                            break;]]></codefragment>
   </duplication>
   <duplication lines="14" tokens="112">
      <file column="9" endcolumn="9" endline="94" line="81"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="9" endcolumn="9" endline="119" line="107"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[        for (int row = 0; row < grid.getGrid().length; row++) {
            // use counter in order to move left one by one the tiles
            int counter = 0;
            for (int col = 0; col < grid.getGrid().length; col++) {
                if (grid.getGrid()[row][col] != 0) {
                    grid.getGrid()[row][0 + counter] = grid.getGrid()[row][col];
                    // "empty" the original tile position afetr movement
                    if ( 0 + counter != col) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        }]]></codefragment>
   </duplication>
   <duplication lines="14" tokens="112">
      <file column="9" endcolumn="9" endline="141" line="128"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="9" endcolumn="9" endline="167" line="154"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[        for (int col = 0; col < grid.getGrid().length; col++) {
            // use counter in order to move left one by one the tiles
            int counter = 0;
            for (int row = 0; row < grid.getGrid().length; row++) {
                if (grid.getGrid()[row][col] != 0) {
                    grid.getGrid()[0 + counter][col] = grid.getGrid()[row][col];
                    // "empty" the original tile position afetr movement
                    if ( 0 + counter != row) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        }]]></codefragment>
   </duplication>
   <duplication lines="13" tokens="111">
      <file column="69" endcolumn="66" endline="50" line="38"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="73" endcolumn="66" endline="193" line="181"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[                    grid.getGrid()[row][grid.getGrid().length - 1 - counter] = grid.getGrid()[row][col];
                    // "empty" the original tile position afetr movement
                    if (grid.getGrid().length - 1 - counter != col) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        }
        
        for (int row = 0; row < grid.getGrid().length; row++) {
            for (int col = grid.getGrid().length - 1; col > 0 ; col--) {
                if (grid.getGrid()[row][col] == grid.getGrid()[row][col - 1]) {]]></codefragment>
   </duplication>
   <duplication lines="22" tokens="106">
      <file column="53" endcolumn="35" endline="86" line="65"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="29" endcolumn="35" endline="133" line="113"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[                    if (grid.getGrid().length - 1 - counter != col) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        }
        
        game.isGameOver();
        game.youWon();
    }

    /**
     * This method let you move left in the grid.
     */
    public void leftMove() {
        for (int row = 0; row < grid.getGrid().length; row++) {
            // use counter in order to move left one by one the tiles
            int counter = 0;
            for (int col = 0; col < grid.getGrid().length; col++) {
                if (grid.getGrid()[row][col] != 0) {
                    grid.getGrid()[row][0 + counter] = grid.getGrid()[row][col];]]></codefragment>
   </duplication>
   <duplication lines="13" tokens="103">
      <file column="45" endcolumn="66" endline="98" line="86"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="49" endcolumn="66" endline="145" line="133"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[                    grid.getGrid()[row][0 + counter] = grid.getGrid()[row][col];
                    // "empty" the original tile position afetr movement
                    if ( 0 + counter != col) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        }
        
        for (int row = 0; row < grid.getGrid().length; row++) {
            for (int col = 0; col < grid.getGrid().length - 1; col++) {
                if (grid.getGrid()[row][col] == grid.getGrid()[row][col + 1]) {]]></codefragment>
   </duplication>
   <duplication lines="22" tokens="97">
      <file column="29" endcolumn="23" endline="68" line="47"
            path="/home/francesco/project-2048-s-game/src/gui/FrameStart.java"/>
      <file column="23" endcolumn="27" endline="95" line="71"
            path="/home/francesco/project-2048-s-game/src/gui/Login.java"/>
      <codefragment><![CDATA[        this.setVisible(true);
    } 
    
    
    /**
     * This method set the features for the button.
     * @param button is the button that will get the features.
     */
    public void setButton(JButton button) {
        button.setForeground(new Color(0, 0, 0));
        button.setFont(new Font("Arial", Font.BOLD, 25));   
        button.setBackground(new Color(255, 255, 255));
        button.addActionListener(this);
        this.add(button);
    }

   
    @Override
    public void actionPerformed(ActionEvent event) {
        if (event.getSource() == start) {
            this.dispose();
            new Login();]]></codefragment>
   </duplication>
   <duplication lines="21" tokens="87">
      <file column="45" endcolumn="26" endline="131" line="111"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="49" endcolumn="26" endline="179" line="159"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[                    grid.getGrid()[row][0 + counter] = grid.getGrid()[row][col];
                    // "empty" the original tile position afetr movement
                    if (0 + counter != col) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        } 
        game.isGameOver();
        game.youWon();
    }

    /**
     * This method let you move up in the grid.
     */
    public void upMove() {
        for (int col = 0; col < grid.getGrid().length; col++) {
            // use counter in order to move left one by one the tiles
            int counter = 0;
            for (int row = 0; row < grid.getGrid().length; row++) {]]></codefragment>
   </duplication>
   <duplication lines="16" tokens="79">
      <file column="55" endcolumn="5" endline="72" line="57"
            path="/home/francesco/project-2048-s-game/src/gui/FrameStart.java"/>
      <file column="55" endcolumn="5" endline="108" line="90"
            path="/home/francesco/project-2048-s-game/src/gui/GameOver.java"/>
      <codefragment><![CDATA[        button.setFont(new Font("Arial", Font.BOLD, 25));   
        button.setBackground(new Color(255, 255, 255));
        button.addActionListener(this);
        this.add(button);
    }

   
    @Override
    public void actionPerformed(ActionEvent event) {
        if (event.getSource() == start) {
            this.dispose();
            new Login();
        } else if (event.getSource() == quit) {
            this.dispose();
        }
    }]]></codefragment>
   </duplication>
   <duplication lines="13" tokens="75">
      <file column="5" endcolumn="38" endline="38" line="26"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="5" endcolumn="39" endline="181" line="170"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[    }

    /**
     * This method let you move right in the grid.
     */
    public void rightMove()
    {
        for (int row = 0; row < grid.getGrid().length; row++) {
            // use counter in order to move left one by one the tiles
            int counter = 0;
            for (int col = grid.getGrid().length - 1; col >= 0 ; col--) {
                if (grid.getGrid()[row][col] != 0) {
                    grid.getGrid()[row][grid.getGrid().length - 1 - counter] = grid.getGrid()[row][col];]]></codefragment>
   </duplication>
   <duplication lines="11" tokens="74">
      <file column="48" endcolumn="38" endline="63" line="53"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="48" endcolumn="39" endline="207" line="196"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[                    grid.getGrid()[row][col - 1] = 0;
                }
            }
        }
        
        for (int row = 0; row < grid.getGrid().length; row++) {
            // use counter in order to move left one by one the tiles
            int counter = 0;
            for (int col = grid.getGrid().length - 1; col >= 0 ; col--) {
                if (grid.getGrid()[row][col] != 0) {
                    grid.getGrid()[row][grid.getGrid().length - 1 - counter] = grid.getGrid()[row][col];]]></codefragment>
   </duplication>
   <duplication lines="11" tokens="71">
      <file column="48" endcolumn="35" endline="111" line="101"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="48" endcolumn="35" endline="159" line="148"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[                    grid.getGrid()[row][col + 1] = 0;
                }
            }
        }
        
        // repeat the first loop to move all the tiles to the left, after adding the two tiles
        for (int row = 0; row < grid.getGrid().length; row++) {
            int counter = 0;
            for (int col = 0; col < grid.getGrid().length; col++) {
                if (grid.getGrid()[row][col] != 0) {
                    grid.getGrid()[row][0 + counter] = grid.getGrid()[row][col];]]></codefragment>
   </duplication>
   <duplication lines="16" tokens="70">
      <file column="146" endcolumn="44" endline="63" line="48"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <file column="146" endcolumn="44" endline="80" line="63"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <codefragment><![CDATA[                if (grid.getGrid()[row][col] != 0 && grid.getGrid()[row][col + 1] == 0 || grid.getGrid()[row][col] == grid.getGrid()[row][col + 1])  {
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * This method check if you can move up in the grid.
     * @return true if you can move.
     */
    public boolean canMoveUp() {
        for (int row = 0; row < grid.getGrid().length - 1; row++) {
            for (int col = 0; col < grid.getGrid().length; col++) {
                if (grid.getGrid()[row][col] == 0 && grid.getGrid()[row + 1][col] != 0 || grid.getGrid()[row][col] == grid.getGrid()[row + 1][col]) {]]></codefragment>
   </duplication>
   <duplication lines="20" tokens="69">
      <file column="53" endcolumn="26" endline="84" line="65"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="30" endcolumn="26" endline="179" line="161"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[                    if (grid.getGrid().length - 1 - counter != col) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        }
        
        game.isGameOver();
        game.youWon();
    }

    /**
     * This method let you move left in the grid.
     */
    public void leftMove() {
        for (int row = 0; row < grid.getGrid().length; row++) {
            // use counter in order to move left one by one the tiles
            int counter = 0;
            for (int col = 0; col < grid.getGrid().length; col++) {]]></codefragment>
   </duplication>
   <duplication lines="6" tokens="68">
      <file column="9" endcolumn="38" endline="38" line="33"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="9" endcolumn="39" endline="207" line="202"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[        for (int row = 0; row < grid.getGrid().length; row++) {
            // use counter in order to move left one by one the tiles
            int counter = 0;
            for (int col = grid.getGrid().length - 1; col >= 0 ; col--) {
                if (grid.getGrid()[row][col] != 0) {
                    grid.getGrid()[row][grid.getGrid().length - 1 - counter] = grid.getGrid()[row][col];]]></codefragment>
   </duplication>
   <duplication lines="6" tokens="68">
      <file column="9" endcolumn="38" endline="63" line="58"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="9" endcolumn="39" endline="181" line="176"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[        for (int row = 0; row < grid.getGrid().length; row++) {
            // use counter in order to move left one by one the tiles
            int counter = 0;
            for (int col = grid.getGrid().length - 1; col >= 0 ; col--) {
                if (grid.getGrid()[row][col] != 0) {
                    grid.getGrid()[row][grid.getGrid().length - 1 - counter] = grid.getGrid()[row][col];]]></codefragment>
   </duplication>
   <duplication lines="6" tokens="65">
      <file column="9" endcolumn="35" endline="86" line="81"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="9" endcolumn="35" endline="159" line="154"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[        for (int row = 0; row < grid.getGrid().length; row++) {
            // use counter in order to move left one by one the tiles
            int counter = 0;
            for (int col = 0; col < grid.getGrid().length; col++) {
                if (grid.getGrid()[row][col] != 0) {
                    grid.getGrid()[row][0 + counter] = grid.getGrid()[row][col];]]></codefragment>
   </duplication>
   <duplication lines="5" tokens="65">
      <file column="9" endcolumn="35" endline="111" line="107"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="9" endcolumn="35" endline="133" line="128"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[        for (int row = 0; row < grid.getGrid().length; row++) {
            int counter = 0;
            for (int col = 0; col < grid.getGrid().length; col++) {
                if (grid.getGrid()[row][col] != 0) {
                    grid.getGrid()[row][0 + counter] = grid.getGrid()[row][col];]]></codefragment>
   </duplication>
   <duplication lines="13" tokens="61">
      <file column="69" endcolumn="5" endline="75" line="63"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="73" endcolumn="5" endline="218" line="207"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[                    grid.getGrid()[row][grid.getGrid().length - 1 - counter] = grid.getGrid()[row][col];
                    // "empty" the original tile position afetr movement
                    if (grid.getGrid().length - 1 - counter != col) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        }
        
        game.isGameOver();
        game.youWon();
    }]]></codefragment>
   </duplication>
   <duplication lines="12" tokens="60">
      <file column="5" endcolumn="44" endline="33" line="22"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <file column="5" endcolumn="44" endline="48" line="39"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <codefragment><![CDATA[    }
    
    
    
    /**
     * This method check if you can move left in the grid.
     * @return true if you can move.
     */
    public boolean canMoveLeft() {
        for (int row = 0; row < grid.getGrid().length; row++) {
            for (int col = 0; col < grid.getGrid().length - 1; col++) {
                if (grid.getGrid()[row][col] == 0 && grid.getGrid()[row][col + 1] != 0 || grid.getGrid()[row][col] == grid.getGrid()[row][col + 1])  {]]></codefragment>
   </duplication>
   <duplication lines="15" tokens="59">
      <file column="55" endcolumn="28" endline="104" line="90"
            path="/home/francesco/project-2048-s-game/src/gui/GameOver.java"/>
      <file column="55" endcolumn="27" endline="95" line="80"
            path="/home/francesco/project-2048-s-game/src/gui/Login.java"/>
      <codefragment><![CDATA[        button.setFont(new Font("Arial", Font.BOLD, 20));
        button.setBackground(new Color(255, 255, 255));
        button.addActionListener(this);
        this.add(button);
    }

    /**
     * This method it's to make the button perform an action.
     */
    @Override
    public void actionPerformed(ActionEvent event)
    {
        if (event.getSource() == button) {
            this.dispose();
            new FrameStart();]]></codefragment>
   </duplication>
   <duplication lines="10" tokens="58">
      <file column="25" endcolumn="33" endline="83" line="74"
            path="/home/francesco/project-2048-s-game/src/gui/BoardPanel.java"/>
      <file column="25" endcolumn="33" endline="113" line="104"
            path="/home/francesco/project-2048-s-game/src/gui/BoardPanel.java"/>
      <codefragment><![CDATA[                        case KeyEvent.VK_LEFT:
                            if (game.canMoveLeft()) {
                                mt.leftMove();
                                sp.spawn();
                            } else if (game.isGameOver()) {
                                gamestate = State.OVER;
                            } else if (game.youWon()) {
                                gamestate = State.WON;
                            }
                            break;]]></codefragment>
   </duplication>
   <duplication lines="14" tokens="58">
      <file column="86" endcolumn="53" endline="46" line="33"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <file column="86" endcolumn="53" endline="61" line="48"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <codefragment><![CDATA[                if (grid.getGrid()[row][col] == 0 && grid.getGrid()[row][col + 1] != 0 || grid.getGrid()[row][col] == grid.getGrid()[row][col + 1])  {
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * This method check if you can move right in the grid.
     * @return true if you can move.
     */
    public boolean canMoveRight() {
        for (int row = 0; row < grid.getGrid().length; row++) {]]></codefragment>
   </duplication>
   <duplication lines="16" tokens="58">
      <file column="86" endcolumn="53" endline="78" line="63"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <file column="86" endcolumn="49" endline="95" line="80"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <codefragment><![CDATA[                if (grid.getGrid()[row][col] == 0 && grid.getGrid()[row + 1][col] != 0 || grid.getGrid()[row][col] == grid.getGrid()[row + 1][col]) {
                    return true;
                }
            }
        }
        return false;
    }

    
    
    /**
     * This method check if you can move down in the grid.
     * @return true if you can move
     */
    public boolean canMoveDown() {
        for (int row = 0; row < grid.getGrid().length - 1; row++) {]]></codefragment>
   </duplication>
   <duplication lines="3" tokens="54">
      <file column="9" endcolumn="47" endline="33" line="31"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <file column="9" endcolumn="47" endline="98" line="96"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="9" endcolumn="47" endline="145" line="143"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[        for (int row = 0; row < grid.getGrid().length; row++) {
            for (int col = 0; col < grid.getGrid().length - 1; col++) {
                if (grid.getGrid()[row][col] == 0 && grid.getGrid()[row][col + 1] != 0 || grid.getGrid()[row][col] == grid.getGrid()[row][col + 1])  {]]></codefragment>
   </duplication>
   <duplication lines="3" tokens="53">
      <file column="9" endcolumn="44" endline="48" line="46"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <file column="9" endcolumn="44" endline="98" line="96"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="9" endcolumn="44" endline="145" line="143"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[        for (int row = 0; row < grid.getGrid().length; row++) {
            for (int col = 0; col < grid.getGrid().length - 1; col++) {
                if (grid.getGrid()[row][col] != 0 && grid.getGrid()[row][col + 1] == 0 || grid.getGrid()[row][col] == grid.getGrid()[row][col + 1])  {]]></codefragment>
   </duplication>
   <duplication lines="3" tokens="52">
      <file column="13" endcolumn="47" endline="159" line="157"
            path="/home/francesco/project-2048-s-game/src/gui/BoardPanel.java"/>
      <file column="9" endcolumn="43" endline="97" line="95"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <codefragment><![CDATA[            for (int i = 0; i < grid.getGrid().length; i++) {
                for (int j = 0; j < grid.getGrid().length; j++) {
                    if (grid.getGrid()[i][j] == 0) {]]></codefragment>
   </duplication>
   <duplication lines="15" tokens="51">
      <file column="146" endcolumn="57" endline="47" line="33"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <file column="146" endcolumn="54" endline="96" line="80"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <codefragment><![CDATA[                if (grid.getGrid()[row][col] == 0 && grid.getGrid()[row][col + 1] != 0 || grid.getGrid()[row][col] == grid.getGrid()[row][col + 1])  {
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * This method check if you can move right in the grid.
     * @return true if you can move.
     */
    public boolean canMoveRight() {
        for (int row = 0; row < grid.getGrid().length; row++) {
            for (int col = 0; col < grid.getGrid().length - 1; col++) {]]></codefragment>
   </duplication>
   <duplication lines="9" tokens="50">
      <file column="69" endcolumn="9" endline="46" line="38"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="73" endcolumn="9" endline="215" line="207"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[                    grid.getGrid()[row][grid.getGrid().length - 1 - counter] = grid.getGrid()[row][col];
                    // "empty" the original tile position afetr movement
                    if (grid.getGrid().length - 1 - counter != col) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        }]]></codefragment>
   </duplication>
   <duplication lines="9" tokens="50">
      <file column="69" endcolumn="9" endline="71" line="63"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="73" endcolumn="9" endline="189" line="181"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[                    grid.getGrid()[row][grid.getGrid().length - 1 - counter] = grid.getGrid()[row][col];
                    // "empty" the original tile position afetr movement
                    if (grid.getGrid().length - 1 - counter != col) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        }]]></codefragment>
   </duplication>
   <duplication lines="10" tokens="48">
      <file column="53" endcolumn="26" endline="49" line="40"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="30" endcolumn="26" endline="97" line="88"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="30" endcolumn="26" endline="144" line="135"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="53" endcolumn="26" endline="192" line="183"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[                    if (grid.getGrid().length - 1 - counter != col) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        }
        
        for (int row = 0; row < grid.getGrid().length; row++) {
            for (int col = grid.getGrid().length - 1; col > 0 ; col--) {]]></codefragment>
   </duplication>
   <duplication lines="12" tokens="45">
      <file column="9" endcolumn="51" endline="77" line="66"
            path="/home/francesco/project-2048-s-game/src/gui/GameOver.java"/>
      <file column="16" endcolumn="51" endline="69" line="58"
            path="/home/francesco/project-2048-s-game/src/gui/Login.java"/>
      <codefragment><![CDATA[        backgroundLabel = new JLabel(background, JLabel.CENTER);
        this.add(backgroundLabel);

        this.setVisible(true);
    }

    /**
     * This method set the features for the labels. 
     * @param label is the label used on the frame.
     */
    public void setLabel(JLabel label) {
        label.setFont(new Font("Anton", Font.PLAIN, 25));]]></codefragment>
   </duplication>
   <duplication lines="11" tokens="43">
      <file column="29" endcolumn="51" endline="90" line="80"
            path="/home/francesco/project-2048-s-game/src/gui/GameOver.java"/>
      <file column="45" endcolumn="51" endline="80" line="70"
            path="/home/francesco/project-2048-s-game/src/gui/Login.java"/>
      <codefragment><![CDATA[        label.setOpaque(true);
        this.add(label);
    }

    /**
     * This method set the features for the button. 
     * @param button is the button used on the frame.
     */
    public void setButton(JButton button) {
        button.setForeground(new Color(0, 0, 0));
        button.setFont(new Font("Arial", Font.BOLD, 20));]]></codefragment>
   </duplication>
   <duplication lines="9" tokens="42">
      <file column="45" endcolumn="9" endline="94" line="86"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="49" endcolumn="9" endline="167" line="159"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[                    grid.getGrid()[row][0 + counter] = grid.getGrid()[row][col];
                    // "empty" the original tile position afetr movement
                    if ( 0 + counter != col) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        }]]></codefragment>
   </duplication>
   <duplication lines="9" tokens="42">
      <file column="45" endcolumn="9" endline="119" line="111"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <file column="49" endcolumn="9" endline="141" line="133"
            path="/home/francesco/project-2048-s-game/src/model/Motion.java"/>
      <codefragment><![CDATA[                    grid.getGrid()[row][0 + counter] = grid.getGrid()[row][col];
                    // "empty" the original tile position afetr movement
                    if (0 + counter != col) {
                        grid.getGrid()[row][col] = 0;
                    }
                    counter++;
                }
            }
        } ]]></codefragment>
   </duplication>
   <duplication lines="16" tokens="41">
      <file column="23" endcolumn="39" endline="56" line="41"
            path="/home/francesco/project-2048-s-game/src/gui/FrameStart.java"/>
      <file column="54" endcolumn="31" endline="69" line="57"
            path="/home/francesco/project-2048-s-game/src/gui/Login.java"/>
      <codefragment><![CDATA[        setButton(quit);
        
    
        JLabel label = new JLabel(background, JLabel.CENTER);
        this.add(label);
        
        this.setVisible(true);
    } 
    
    
    /**
     * This method set the features for the button.
     * @param button is the button that will get the features.
     */
    public void setButton(JButton button) {
        button.setForeground(new Color(0, 0, 0));]]></codefragment>
   </duplication>
   <duplication lines="11" tokens="41">
      <file column="5" endcolumn="57" endline="32" line="22"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <file column="5" endcolumn="54" endline="96" line="86"
            path="/home/francesco/project-2048-s-game/src/model/Game.java"/>
      <codefragment><![CDATA[    }
    
    
    
    /**
     * This method check if you can move left in the grid.
     * @return true if you can move.
     */
    public boolean canMoveLeft() {
        for (int row = 0; row < grid.getGrid().length; row++) {
            for (int col = 0; col < grid.getGrid().length - 1; col++) {]]></codefragment>
   </duplication>
</pmd-cpd>